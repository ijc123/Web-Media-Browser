<?xml version="1.0" encoding="UTF-8"?>
<facelet-taglib version="2.0"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facelettaglibary_2_0.xsd">
	<namespace>/WEB-INF/mytags</namespace>
	<tag>
		<tag-name>queryTable</tag-name>
		<component>
			<description>
   				Render a table displaying the results of a query into the media table 
		   		available tags: 
		   		query = a string to search for in the database
  			 </description>
			<component-type>custom.component.QueryTable</component-type>
			<renderer-type>custom.component.QueryTable</renderer-type>
			<handler-class />
		</component>
	</tag>
	<tag>
		<tag-name>fileSelectOne</tag-name>
		<component>
			<description>
   				Select one file or directory    	
   			</description>
			<component-type>custom.component.FileSelectOne</component-type>
			<renderer-type>custom.component.FileSelectOne</renderer-type>
			<handler-class />
		</component>
		 <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon/>
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>Converter instance registered with this component.</description>
            <display-name>Converter</display-name>
            <icon/>
            <name>converter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the converter message, replacing any message that comes from the converter.</description>
            <display-name>Converter Message</display-name>
            <icon/>
            <name>converterMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ftpPassword</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ftpServer</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ftpUsername</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
        	<description>Display Directory Names</description>
            <display-name>Hide Directories</display-name>
            <icon/>
            <name>hideDirectories</name>
            <type>boolean</type>
        </attribute>
        <attribute>
        	<description>Display File Names</description>
            <display-name>Hide Files</display-name>
            <icon/>
            <name>hideFiles</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.</description>
            <display-name>Immediate Action</display-name>
            <icon/>
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Flag indicating that the user is required to provide a submitted value for this input component.</description>
            <display-name>Required Flag</display-name>
            <icon/>
            <name>required</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the validation message for the "required" facility, if the "required" facility is used.</description>
            <display-name>Required Message</display-name>
            <icon/>
            <name>requiredMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
        	<description>The number of rows used to display the directory contents</description>
            <display-name>Directory Contents Size</display-name>
            <icon/>
            <name>size</name>           
            <type>int</type>
        </attribute>
        <attribute>
            <description>MethodExpression representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.</description>
            <display-name>Validator</display-name>
            <icon/>
            <name>validator</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the validator message, replacing any message that comes from the validator.</description>
            <display-name>Validator Message</display-name>
            <icon/>
            <name>validatorMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The starting location input and selected location output.</description>
            <display-name>Location</display-name>
            <icon/>
            <name>location</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>&lt;p&gt; MethodExpression representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a &lt;code&gt;ValueChangeEvent&lt;/code&gt; parameter, with a return type of void, &lt;span class="changed_added_2_0"&gt;or to a public method that takes no arguments with a return type of void. In the latter case, the method has no way of easily knowing what the new value is, but this can be useful in cases where a notification is needed that "this value changed".&lt;/span&gt; &lt;/p&gt;</description>
            <display-name>Value Change Listener</display-name>
            <icon/>
            <name>valueChangeListener</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
	</tag>
	<tag>
		<tag-name>mediaPlayer</tag-name>
		<component>
			<description>
   	Plays a video using the windows media player plugin
   		available tags: 
   		filePath = path to the file to be displayed
   </description>
			<component-type>custom.component.UIMediaPlayer</component-type>
			<handler-class />
		</component>
	</tag>
	<tag>
		<tag-name>tagInfo</tag-name>
		<component>
			<description>
	   	Creates a graphic representation of a suplied list of tags
   </description>
			<component-type>custom.component.UITagInfo</component-type>
			<handler-class />
		</component>
	</tag>
	<tag>
		<tag-name>preview</tag-name>
		<component>
			<description>
	   	Creates and displays a preview of a media file
   </description>
			<component-type>custom.component.UIPreview</component-type>
			<handler-class />
		</component>
	</tag>
	<tag>
		<tag-name>pager</tag-name>
		<component>
			<description>
   	Allows paging trough a large datatable
   </description>
			<component-type>custom.component.UIPager</component-type>
			<handler-class />
		</component>
	</tag>
	<tag>
		<tag-name>dataTable</tag-name>
		<component>
			<description>
   		Modified data table
   </description>
			<component-type>custom.component.UIMyData</component-type>
			<handler-class />
		</component>
	</tag>
</facelet-taglib>
